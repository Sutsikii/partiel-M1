// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      Role     @default(VISITOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  conferences UserConference[]
  sponsors    Sponsor[]

  @@map("users")
}

model Conference {
  id          String   @id @default(cuid())
  title       String
  description String
  speaker     String
  date        DateTime
  duration    Int      // en minutes
  roomId      String
  maxCapacity Int      @default(50)
  sponsorId   String?  // Relation optionnelle avec Sponsor
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  room        Room           @relation(fields: [roomId], references: [id])
  sponsor     Sponsor?       @relation(fields: [sponsorId], references: [id])
  attendees   UserConference[]

  @@map("conferences")
}

model Room {
  id          String   @id @default(cuid())
  name        String   @unique
  capacity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  conferences Conference[]

  @@map("rooms")
}

model Sponsor {
  id          String   @id @default(cuid())
  name        String
  description String?
  logo        String?  // URL du logo
  website     String?
  email       String?
  phone       String?
  level       SponsorLevel @default(BRONZE)
  userId      String?   // Lien vers le compte utilisateur sponsor
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  conferences Conference[]
  user        User?     @relation(fields: [userId], references: [id])

  @@map("sponsors")
}

model UserConference {
  id           String @id @default(cuid())
  userId       String
  conferenceId String
  createdAt    DateTime @default(now())

  // Relations
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  conference Conference @relation(fields: [conferenceId], references: [id], onDelete: Cascade)

  @@unique([userId, conferenceId])
  @@map("user_conferences")
}

enum Role {
  ADMIN
  VISITOR
}

enum SponsorLevel {
  PLATINUM
  GOLD
  SILVER
  BRONZE
}
